{"version":3,"file":"static/js/576.87e90c61.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/ExclamationTriangleIcon.js","../node_modules/@heroicons/react/24/outline/esm/CheckCircleIcon.js","components/Modal.jsx","home/Checkout.jsx"],"sourcesContent":["import * as React from \"react\";\nfunction ExclamationTriangleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ExclamationTriangleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(CheckCircleIcon);\nexport default ForwardRef;","import { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport {\r\n  ExclamationTriangleIcon,\r\n  CheckCircleIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { cartdelete } from \"../feature/authslice\";\r\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { order } from \"../feature/authslice\";\r\n\r\nexport default function Modal({ data, setOpen1, title, orders }) {\r\n  const cancelButtonRef = useRef(null);\r\n  const [open, setOpen] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  let clear;\r\n  useEffect(() => {\r\n    if (!data) {\r\n      setTimeout(() => {\r\n        dispatch(order(orders));\r\n      }, 1000);\r\n    }\r\n  }, []);\r\n  // const ord = () => {\r\n  //   clearTimeout(clear);\r\n  //   dispatch(order(orders));\r\n  // };\r\n\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        className=\"relative z-10\"\r\n        initialFocus={cancelButtonRef}\r\n        onClose={setOpen}\r\n      >\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 z-10 w-screen overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n              enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n              leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            >\r\n              <Dialog.Panel className=\"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\">\r\n                <div className=\"bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4\">\r\n                  <div className={\"sm:flex sm:items-start \"}>\r\n                    <div\r\n                      className={`mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full ${\r\n                        data ? \"bg-red-100\" : \"\"\r\n                      } \r\n                      sm:mx-0 sm:h-10 sm:w-10`}\r\n                    >\r\n                      {data ? (\r\n                        <ExclamationTriangleIcon\r\n                          className=\"h-6 w-6 text-red-600\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      ) : (\r\n                        <CheckCircleIcon\r\n                          className=\"h-20 w-20 text-green-600 bg-\"\r\n                          // aria-hidden=\"true\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left\">\r\n                      <Dialog.Title\r\n                        as=\"h3\"\r\n                        className=\"text-base font-semibold leading-6 text-gray-900 mt-2\"\r\n                      >\r\n                        {data ? \"Delete\" : \"\"} {title}\r\n                      </Dialog.Title>\r\n                      {data ? (\r\n                        <div className=\"mt-2\">\r\n                          <p className=\"text-sm text-gray-500\">\r\n                            Are you sure you want to delete this Cart item ?\r\n                          </p>\r\n                        </div>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\">\r\n                  {data ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"inline-flex w-full justify-center rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 sm:ml-3 sm:w-auto\"\r\n                        onClick={() => {\r\n                          dispatch(cartdelete(data));\r\n                          setOpen1(false);\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>{\" \"}\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto\"\r\n                        onClick={() => setOpen1(false)}\r\n                        ref={cancelButtonRef}\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    // <>\r\n                    //   <button\r\n                    //     type=\"button\"\r\n                    //     className=\"inline-flex w-full justify-center rounded-md bg-red-600 px-7 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 sm:ml-3 sm:w-auto\"\r\n                    //     onClick={ord}\r\n                    //   >\r\n                    //     <Link to={\"/\"}> Ok</Link>\r\n                    //   </button>{\" \"}\r\n                    //   <button\r\n                    //     type=\"button\"\r\n                    //     className=\"mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto\"\r\n                    //     onClick={ord}\r\n                    //     ref={cancelButtonRef}\r\n                    //   >\r\n                    //     <Link to={\"/orderpage\"}>Orders</Link>\r\n                    //   </button>\r\n                    // </>\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { cartitem, cartupdate, userData, address } from \"../feature/authslice\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport Modal from \"../components/Modal\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nexport default function Checkout() {\r\n  const [open, setOpen] = useState(false);\r\n  const [id, setid] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [payment, setpayment] = useState();\r\n  const [orders, setOrders] = useState({});\r\n  const dispatch = useDispatch();\r\n  const [add, setAdd] = useState();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const product = useSelector(cartitem);\r\n  const user = useSelector(userData);\r\n\r\n  const modal = (data, title, order) => {\r\n    setid(data);\r\n    setTitle(title);\r\n    setOrders(order);\r\n    setOpen(true);\r\n  };\r\n  const setOpen1 = (data) => {\r\n    setOpen(data);\r\n  };\r\n  const handleAddress = (e) => {\r\n    setAdd(e.target.value);\r\n  };\r\n  const handlePayment = (e) => {\r\n    setpayment(e.target.value);\r\n  };\r\n  const handleOrder = () => {\r\n    if (payment && add) {\r\n      const data = { userId: user._id, productArray: product };\r\n\r\n      modal(\"\", \"Your Order Successfully placed\", data);\r\n    } else {\r\n      toast.error(\"Please choose Address and Payment \", {\r\n        position: \"bottom-left\",\r\n\r\n        autoClose: 1000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n\r\n        theme: \"dark\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {!product.length && <Navigate to={\"/\"} replace={true}></Navigate>} */}\r\n      <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"grid grid-cols-1 gap-x-8 gap-y-10 lg:grid-cols-5\">\r\n          <div className=\"lg:col-span-3\">\r\n            {/* This form is for address */}\r\n\r\n            <form\r\n              className=\"bg-white px-5 py-12 mt-12\"\r\n              noValidate\r\n              onSubmit={handleSubmit((data) => {\r\n                dispatch(\r\n                  address({ ...user, addresses: [...user.addresses, data] })\r\n                );\r\n\r\n                reset();\r\n              })}\r\n            >\r\n              <div className=\"space-y-12\">\r\n                <div className=\"border-b border-gray-900/10 pb-12\">\r\n                  <h2 className=\"text-2xl font-semibold leading-7 text-gray-900\">\r\n                    Personal Information\r\n                    <span className=\"textred text-xl\">*</span>\r\n                  </h2>\r\n                  <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n                    Use a permanent address where you can receive mail.\r\n                  </p>\r\n\r\n                  <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\r\n                    <div className=\"sm:col-span-4\">\r\n                      <label\r\n                        htmlFor=\"name\"\r\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        Full name<span className=\"textred text-l\">*</span>\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          {...register(\"name\", {\r\n                            required: \"name is required*\",\r\n                          })}\r\n                          id=\"name\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                        {errors.name && (\r\n                          <p className=\"text-red-500\">{errors.name.message}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:col-span-4\">\r\n                      <label\r\n                        htmlFor=\"email\"\r\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        Email address<span className=\"textred text-l\">*</span>\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          id=\"email\"\r\n                          {...register(\"email\", {\r\n                            required: \"email is required*\",\r\n                            pattern: {\r\n                              value: /\\b[\\w\\.-]+@[\\w\\.-]+\\.\\w{2,4}\\b/gi,\r\n                              message: \"email not valid*\",\r\n                            },\r\n                          })}\r\n                          type=\"email\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                        {errors.email && (\r\n                          <p className=\"text-red-500\">{errors.email.message}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:col-span-3\">\r\n                      <label\r\n                        htmlFor=\"phone\"\r\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        Phone<span className=\"textred text-l\">*</span>\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          id=\"phone\"\r\n                          {...register(\"phone\", {\r\n                            required: \"phone is required*\",\r\n                            pattern: {\r\n                              value: /^(\\+\\d{1,3}[- ]?)?\\d{10}$/gi,\r\n                              message: \"Number in not valid*\",\r\n                            },\r\n                          })}\r\n                          type=\"tel\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                        {errors.phone && (\r\n                          <p className=\"text-red-500\">{errors.phone.message}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-span-full\">\r\n                      <label\r\n                        htmlFor=\"street-address\"\r\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        Street address<span className=\"textred text-l\">*</span>\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          {...register(\"street\", {\r\n                            required: \"street is required*\",\r\n                          })}\r\n                          id=\"street\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                        {errors.street && (\r\n                          <p className=\"text-red-500\">\r\n                            {errors.street.message}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:col-span-2 sm:col-start-1\">\r\n                      <label\r\n                        htmlFor=\"city\"\r\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        City<span className=\"textred text-l\">*</span>\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          {...register(\"city\", {\r\n                            required: \"city is required*\",\r\n                          })}\r\n                          id=\"city\"\r\n                          autoComplete=\"address-level2\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                        {errors.city && (\r\n                          <p className=\"text-red-500\">{errors.city.message}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:col-span-2\">\r\n                      <label\r\n                        htmlFor=\"state\"\r\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        State / Province\r\n                        <span className=\"textred text-l\">*</span>\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          {...register(\"state\", {\r\n                            required: \"state is required*\",\r\n                          })}\r\n                          id=\"state\"\r\n                          autoComplete=\"address-level1\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                        {errors.state && (\r\n                          <p className=\"text-red-500\">{errors.state.message}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:col-span-2\">\r\n                      <label\r\n                        htmlFor=\"pinCode\"\r\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        ZIP / Postal code\r\n                        <span className=\"textred text-l\">*</span>\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          {...register(\"pinCode\", {\r\n                            required: \"pinCode is required*\",\r\n                            pattern: {\r\n                              value: /^(\\+\\d{1,3}[- ]?)?\\d{6}$/gi,\r\n                              message: \"Pincode is not valid*\",\r\n                            },\r\n                          })}\r\n                          id=\"pinCode\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                        {errors.pinCode && (\r\n                          <p className=\"text-red-500\">\r\n                            {errors.pinCode.message}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mt-6 flex items-center justify-end gap-x-6\">\r\n                  <button\r\n                    onClick={(e) => reset()}\r\n                    type=\"button\"\r\n                    className=\"text-sm font-semibold leading-6 text-gray-900\"\r\n                  >\r\n                    Reset\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"rounded-md bg-green px-3 py-2 text-sm font-semibold text-white shadow-sm h focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                  >\r\n                    Add Address\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <div className=\"border-b border-gray-900/10 pb-12\">\r\n              <h2 className=\"text-base font-semibold leading-7 text-gray-900\">\r\n                Addresses\r\n              </h2>\r\n              <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n                Choose from Existing addresses\r\n              </p>\r\n\r\n              <ul style={{ overflowY: \"scroll\", maxHeight: \"15em\" }}>\r\n                {user\r\n                  ? user.addresses.map((address, index) => (\r\n                      <li\r\n                        key={index}\r\n                        className=\"flex justify-between gap-x-6 px-5 py-5 border-solid border-2 border-gray-200 mb-2\"\r\n                      >\r\n                        <div className=\"flex gap-x-4\">\r\n                          <input\r\n                            onChange={handleAddress}\r\n                            name=\"address\"\r\n                            type=\"radio\"\r\n                            value={index}\r\n                            className=\"h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600\"\r\n                          />\r\n                          <div className=\"min-w-0 flex-auto\">\r\n                            <p className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n                              {address.name}\r\n                            </p>\r\n                            <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\r\n                              {address.street}\r\n                            </p>\r\n                            <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\r\n                              {address.pinCode}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"hidden sm:flex sm:flex-col sm:items-end\">\r\n                          <p className=\"text-sm leading-6 text-gray-900\">\r\n                            Phone: {address.phone}\r\n                          </p>\r\n                          <p className=\"text-sm leading-6 text-gray-500\">\r\n                            {address.city}\r\n                          </p>\r\n                        </div>\r\n                      </li>\r\n                    ))\r\n                  : \"\"}\r\n              </ul>\r\n\r\n              <div className=\"mt-10 space-y-10\">\r\n                <fieldset>\r\n                  <legend className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n                    Payment Methods\r\n                  </legend>\r\n                  <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n                    Choose One\r\n                  </p>\r\n                  <div className=\"mt-6 space-y-6\">\r\n                    <div className=\"flex items-center gap-x-3\">\r\n                      <input\r\n                        id=\"cash\"\r\n                        name=\"payments\"\r\n                        onChange={handlePayment}\r\n                        value=\"cash\"\r\n                        type=\"radio\"\r\n                        // checked={paymentMethod === \"cash\"}\r\n                        className=\"h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600\"\r\n                      />\r\n                      <label\r\n                        htmlFor=\"cash\"\r\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        Cash\r\n                      </label>\r\n                    </div>\r\n                    {/* <div className=\"flex items-center gap-x-3\">\r\n                      <input\r\n                        id=\"card\"\r\n                        // onChange={handlePayment}\r\n                        name=\"payments\"\r\n                        // checked={paymentMethod === \"card\"}\r\n                        value=\"card\"\r\n                        type=\"radio\"\r\n                        className=\"h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600\"\r\n                      />\r\n                      <label\r\n                        htmlFor=\"card\"\r\n                        className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        Card Payment\r\n                      </label>\r\n                    </div> */}\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"lg:col-span-2\">\r\n            <div className=\"mx-auto mt-12 bg-white max-w-7xl px-2 sm:px-2 lg:px-4\">\r\n              <div className=\"border-t border-gray-200 px-0 py-6 sm:px-0\">\r\n                <h1 className=\"text-4xl my-5 font-bold tracking-tight text-gray-900\">\r\n                  Cart\r\n                </h1>\r\n                <div className=\"flow-root\">\r\n                  {product.map.length === 0 ? (\r\n                    <Navigate to=\"/\" replace={true}></Navigate>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <ul\r\n                    className=\"-my-6 divide-y divide-gray-200\"\r\n                    style={{ overflowY: \"scroll\", maxHeight: \"45em\" }}\r\n                  >\r\n                    {product.map((item) => (\r\n                      <li key={item.productid} className=\"flex py-6\">\r\n                        <div className=\"h-24 w-24 flex-shrink-0 overflow-hidden rounded-md  flex justify-center\">\r\n                          <Link\r\n                            to={\r\n                              item.productid +\r\n                              \"/\" +\r\n                              item.price +\r\n                              \"/\" +\r\n                              item.title.replaceAll(\" \", \"-\") +\r\n                              \"/\" +\r\n                              item.image\r\n                                .substr(31)\r\n                                .replaceAll(\"/\", \"*\")\r\n                                .replaceAll(\"?\", \"_\") +\r\n                              \"/\" +\r\n                              item.category\r\n                            }\r\n                          >\r\n                            <img\r\n                              src={item.image}\r\n                              alt={item.image}\r\n                              className=\"h-24\"\r\n                            />\r\n                          </Link>\r\n                        </div>\r\n\r\n                        <div className=\"ml-4 flex flex-1 flex-col\">\r\n                          <div>\r\n                            <div className=\"flex justify-between text-base font-medium text-gray-900\">\r\n                              <h3>{item.title}</h3>\r\n                              <p className=\"mr-5\">\r\n                                Rs. {item.price * item.quantity}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex flex-1 items-end justify-between text-sm\">\r\n                            <div className=\"text-gray-500\">\r\n                              <label\r\n                                htmlFor=\"quantity\"\r\n                                className=\"inline mr-5 text-sm font-medium leading-6 text-gray-900\"\r\n                              >\r\n                                Qty\r\n                              </label>\r\n                              <select\r\n                                onChange={(e) => {\r\n                                  const val = {\r\n                                    id: item._id,\r\n                                    item: e.target.value,\r\n                                  };\r\n                                  dispatch(cartupdate(val));\r\n                                }}\r\n                                value={item.quantity}\r\n                              >\r\n                                <option value=\"1\" className=\"text-gray-900\">\r\n                                  1\r\n                                </option>\r\n                                <option value=\"2\" className=\"text-gray-900\">\r\n                                  2\r\n                                </option>\r\n                                <option value=\"3\" className=\"text-gray-900\">\r\n                                  3\r\n                                </option>\r\n                                <option value=\"4\" className=\"text-gray-900\">\r\n                                  4\r\n                                </option>\r\n                                <option value=\"5\" className=\"text-gray-900\">\r\n                                  5\r\n                                </option>\r\n                              </select>\r\n                            </div>\r\n\r\n                            <div className=\"flex\">\r\n                              <button\r\n                                onClick={() => modal(item._id, item.title)}\r\n                                type=\"button\"\r\n                                className=\"font-medium textred hover:text-indigo-500 mr-3\"\r\n                              >\r\n                                Remove\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"border-t border-gray-200 px-2 py-6 sm:px-2\">\r\n                <div className=\"flex justify-between my-2 text-base font-medium text-gray-900\">\r\n                  <p>Subtotal</p>\r\n                  <p>\r\n                    Rs.{\" \"}\r\n                    {product.reduce((it, ite) => {\r\n                      return (\r\n                        Number(it) + Number(ite.price) * Number(ite.quantity)\r\n                      );\r\n                    }, 0)}\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex justify-between my-2 text-base font-medium text-gray-900\">\r\n                  <p>Total Items in Cart</p>\r\n                  {product.length === 0 ? (\r\n                    <Navigate to=\"/\" replace={true}></Navigate>\r\n                  ) : (\r\n                    product.length\r\n                  )}{\" \"}\r\n                  items\r\n                </div>\r\n                <p className=\"mt-0.5 text-sm text-gray-500\">\r\n                  Shipping and taxes calculated at checkout.\r\n                </p>\r\n                <div className=\"mt-6\">\r\n                  {product.length === 0 ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <div\r\n                      onClick={handleOrder}\r\n                      className=\"flex cursor-pointer items-center justify-center rounded-md border border-transparent bg-indigo-600 px-6 py-3 text-base font-medium text-white shadow-sm hover:bg-indigo-700\"\r\n                    >\r\n                      Order Now\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"mt-6 flex justify-center text-center text-sm text-gray-500\">\r\n                  <p>\r\n                    or\r\n                    <Link to=\"/\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n                      >\r\n                        Continue Shopping\r\n                        <span aria-hidden=\"true\"> &rarr;</span>\r\n                      </button>\r\n                    </Link>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n      {open ? (\r\n        <Modal data={id} setOpen1={setOpen1} title={title} orders={orders} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["React","_ref","svgRef","title","titleId","props","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","Modal","data","setOpen1","orders","cancelButtonRef","useRef","open","setOpen","useState","dispatch","useDispatch","useEffect","setTimeout","order","_jsx","Transition","Root","show","as","Fragment","children","_jsxs","Dialog","className","initialFocus","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","concat","ExclamationTriangleIcon","CheckCircleIcon","Title","_Fragment","type","onClick","cartdelete","Checkout","setid","setTitle","payment","setpayment","setOrders","add","setAdd","register","handleSubmit","reset","formState","errors","useForm","product","useSelector","cartitem","user","userData","modal","handleAddress","e","target","value","noValidate","onSubmit","address","addresses","htmlFor","required","name","message","pattern","email","phone","street","autoComplete","city","state","pinCode","style","overflowY","maxHeight","map","index","onChange","length","Navigate","to","replace","item","Link","productid","price","replaceAll","image","substr","category","src","alt","quantity","val","_id","cartupdate","reduce","it","ite","Number","handleOrder","userId","productArray","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","Footer"],"sourceRoot":""}