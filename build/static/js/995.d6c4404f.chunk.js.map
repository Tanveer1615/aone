{"version":3,"file":"static/js/995.d6c4404f.chunk.js","mappings":"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","sources":["components/Signup.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createUserAsync, user, uerror } from \"../feature/authslice\";\nimport { Navigate } from \"react-router-dom\";\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const usert = useSelector(user);\n\n  const error = useSelector(uerror);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  return (\n    <>\n      {usert && <Navigate to=\"/\" replace={true}></Navigate>}\n      <div className=\" w-full  h-screen flex items-center justify-center   bg-gradient-to-r from-indigo-500 via-purple-4000 to-pink-400\">\n        <div className=\"modal-box  content-center\">\n          <div className=\"modal-action flex flex-col justify-center mt-0\">\n            <form\n              onSubmit={handleSubmit((data) => {\n             \n                dispatch(\n                  createUserAsync({\n                    email: data.email,\n                    password: data.password,\n                  })\n                );\n              })}\n              className=\"card-body\"\n              method=\"dialog\"\n            >\n              <h3 className=\"font-bold text-2xl text-center \">Please Signup</h3>\n\n              {/* email */}\n              <div className=\"form-control\">\n                <label className=\"label\">\n                  <span className=\"label-text text-base\">\n                    Email <span className=\"textred\">*</span>\n                  </span>\n                </label>\n                <input\n                  type=\"text\"\n                  placeholder=\"email\"\n                  className=\"input input-bordered\"\n                  {...register(\"email\", {\n                    required: \"email is required\",\n                    pattern: {\n                      value: /\\b[\\w\\.-]+@[\\w\\.-]+\\.\\w{2,4}\\b/gi,\n                      message: \"email not valid\",\n                    },\n                  })}\n                />\n                {errors.email && (\n                  <p className=\"text-red-500\">{errors.email.message}</p>\n                )}\n              </div>\n\n              {/* password */}\n              <div className=\"form-control\">\n                <label className=\"label\">\n                  <span className=\"label-text text-base\">\n                    Password <span className=\"textred\">*</span>\n                  </span>\n                </label>\n                <input\n                  type=\"password\"\n                  placeholder=\"password\"\n                  autoComplete=\"true\"\n                  className=\"input input-bordered\"\n                  {...register(\"password\", {\n                    required: \"password is required\",\n                  })}\n                />\n                {errors.password && (\n                  <p className=\"text-red-500\">\n                    {errors.confirmPassword.message}\n                  </p>\n                )}\n              </div>\n              <div className=\"form-control\">\n                <label className=\"label\">\n                  <span className=\"label-text text-base\">\n                    Confirm Password <span className=\"textred\">*</span>\n                  </span>\n                </label>\n                <input\n                  type=\"password\"\n                  placeholder=\" Confirm password\"\n                  autoComplete=\"true\"\n                  className=\"input input-bordered\"\n                  {...register(\"confirmPassword\", {\n                    required: \"confirm password is required\",\n                    validate: (value, formValues) =>\n                      value === formValues.password ||\n                      \"Confirm password not matching\",\n                  })}\n                />\n              </div>\n\n              {errors.confirmPassword && (\n                <p className=\"text-red-500\">{errors.confirmPassword.message}</p>\n              )}\n              {error && error === \"Email already exists\" && (\n                <p className=\"text-red-500\">{error}</p>\n              )}\n\n              {/* login btn */}\n              <div className=\"form-control mt-4\">\n                <button type=\"submit\" className=\"btn bg-green text-white h\">\n                  Login\n                </button>\n              </div>\n\n              <Link to=\"/\">\n                <button\n                  htmlFor=\"my_modal_5\"\n                  className=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\"\n                >\n                  âœ•\n                </button>\n              </Link>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Signup;\n"],"names":["Signup","dispatch","useDispatch","usert","useSelector","user","error","uerror","register","handleSubmit","formState","errors","useForm","_jsxs","_Fragment","children","_jsx","Navigate","to","replace","className","onSubmit","data","createUserAsync","email","password","method","type","placeholder","required","pattern","value","message","autoComplete","confirmPassword","validate","formValues","Link","htmlFor"],"sourceRoot":""}